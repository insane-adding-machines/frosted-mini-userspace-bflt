PREFIX?=$(PWD)/build
CROSS_COMPILE?=arm-frosted-eabi-
CC:=$(CROSS_COMPILE)gcc

ARCH?=stm32

# Fetch source files
SRC_DIR=src wolfcrypt/src
CXX_FILES := $(foreach sdir,$(SRC_DIR),$(wildcard $(sdir)/*.c))

# Translate to .o object files
OBJS:= $(patsubst %.c,%.o,$(CXX_FILES))

CFLAGS-y:=-I. $(EXTRA_CFLAGS) -Iwolfssl
CFLAGS-$(WOLFSSL_USE_FAST_MATH)+=-DUSE_FAST_MATH
CFLAGS-$(WOLFSSL_RSA)+=-DRSA_DECODE_EXTRA
CFLAGS-$(WOLFSSL_ECC)+=-DHAVE_ECC -DHAVE_ALL_CURVES -DHAVE_SUPPORTED_CURVES
CFLAGS-$(FREERTOS)+=-DFREERTOS

all: ../libwolfssl.a

%.o: %.c
	$(CC) -c $(CFLAGS) $(CFLAGS-y) -o $@ $< -Iconfig $(EXTRA_CFLAGS) $(PLATFORM_CFLAGS) -I $(PREFIX)/include -DTFM_TIMING_RESISTANT -DNO_WRITEV -DNO_ERROR_STRINGS -DSMALL_SESSION_CACHE -DWOLFSSL_SMALL_STACK -DHAVE_TLS_EXTENSIONS -DNO_DSA -DNO_RABBIT -DNO_DES3 -DOPENSSL_EXTRA -DWOLFSSL_FROSTED -DNO_INLINE -I.


../libwolfssl.a: $(OBJS)
	@mkdir -p ../include/wolfssl/wolfcrypt
	@cp wolfssl/*.h  ../include/wolfssl
	@cp wolfssl/wolfcrypt/*.h  ../include/wolfssl/wolfcrypt
	@cp -r wolfssl/openssl/ ../include/
	@$(CROSS_COMPILE)ar cr $@ $(OBJS)
	@$(CROSS_COMPILE)ranlib $@
    
clean:
	rm -f $(OBJS)

